{"remainingRequest":"/Users/bianchi_dy/Documents/GitHub/ingredient-network/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bianchi_dy/Documents/GitHub/ingredient-network/src/components/Network.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bianchi_dy/Documents/GitHub/ingredient-network/src/components/Network.vue","mtime":1606285509796},{"path":"/Users/bianchi_dy/Documents/GitHub/ingredient-network/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bianchi_dy/Documents/GitHub/ingredient-network/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKaW1wb3J0IHsganNvbiwgY3N2IH0gZnJvbSAnZDMtZmV0Y2gnCi8vJy4uL2Fzc2V0cy9qcy9teWtleS5qcycKLy8gRE9NVG9rZW5MaXN0LnByb3RvdHlwZS5pbmRleE9mID0gQXJyYXkucHJvdG90eXBlLmluZGV4T2Y7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIm5ldHdvcmsiLAogIHByb3BzOiB7CiAgICBqc29uVVJMOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogKCkgPT4gJ2luZ3JlZGllbnRzX25ldHdvcmtfZmluYWwuanNvbicKICAgIH0sCgogICAgY3N2VVJMOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogKCkgPT4gJ3NpZGViYXJfdGV4dF9maW5hbC5jc3YnCiAgICB9LAogICAgbGlua0Rpc3RhbmNlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMzUKICAgIH0sCiAgICAvLyBzdmcKICAgIHN2Z1NpemU6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCwKICAgICAgICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0CiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIGJvZHlTdHJlbmd0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IC0zMDAKICAgIH0sCgogICAgaGVpZ2h0OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogKCkgPT4gMzI1CiAgICB9LAogICAgCiAgICB3aWR0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6ICgpID0+IDMyNQogICAgfSwKCiAgICBtYXJnaW46IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHRvcDogNSwKICAgICAgICAgIHJpZ2h0OiA1LAogICAgICAgICAgYm90dG9tOiA1LAogICAgICAgICAgbGVmdDogNQogICAgICAgIH0KICAgICAgfQogICAgfSAKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3Rpb246IHsKICAgICAgICBsaW5rczogW10sCiAgICAgICAgbm9kZXM6IFtdCiAgICAgIH0sCiAgICAgIHBpbm5lZDogW10sIAogICAgICBub2RlTGlzdDogW10sCiAgICAgIGxpbmtMaXN0OiBbXSwKICAgICAgc3RlcExpc3Q6IFtdLAogICAgICBwcm9maWxlSW5ncmVkaWVudHM6IFtdLAogICAgICBmb3JjZTogbnVsbCwKICAgICAgem9vbTogZDMuem9vbSgpLAogICAgICBub2RlQ29sb3I6IFsnI0ZGREE5NScsICcjRkNCMDQwJywgJyNGRjc2MjknLCAnI0U0MTQwRicsICcjNjEyMzQ4JywgJyMwMDY0MjgnLAogICAgICAgICAgICAgICAgJyMzM0E4NDQnLCAnI0EwQjAzNicsICcjRDBFODIwJywgJyNEOENFQ0InXSwKICAgICAgYmxhY2tPdXQ6IFsnI0ZGREE5NScsICcjRDBFODIwJywgJyNEOENFQ0InLCAnI0ZDQjA0MCddLAogICAgICBoaWdobGlnaHRGbGF2b3JzOiBbXSwKICAgICAgYWN0aXZlTm9kZTogJ0ZsYXZvcicsCiAgICAgIGFjdGl2ZU5vZGVDb2xvcjogJ2JsYWNrJywKICAgICAgYWN0aXZlTm9kZVByb2ZpbGU6IDMsCiAgICAgIGFjdGl2ZU5vZGVTaWRlYmFyOiAnQ2xpY2sgb24gdGhlIGFycm93cyBhYm92ZSB0byBleHBsb3JlIGNvbW1vbiBmbGF2b3VycyB0aGF0IGFyZSBwYWlyZWQgd2l0aCBjaGlsaS4nLAogICAgICBhY3RpdmVOb2RlVmFyaWFudHM6ICcnLAogICAgICBhY3RpdmVOb2RlU2F1Y2VzOiAwLAogICAgICBhbGxTYXVjZXM6IDQ1LAogICAgICB0cmFuc2l0aW9uU3BlZWQ6IDIwMCwKICAgICAgY3VydmVzOiB0cnVlLAogICAgICBzdGVwcGVyOiAwLAogICAgICBsaW5rU3Ryb2tlOiAnI2IzODAwMCcsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGhlYWRlclRleHQoKXsKICAgICAgaWYgKHRoaXMuc3RlcHBlciA8IHRoaXMuc3RlcExpc3QubGVuZ3RoIC0xKSB7CiAgICAgICAgcmV0dXJuICdXaGF0IGluZ3JlZGllbnRzIGdvIHdpdGggY2hpbGxpPycKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gJ0NsaWNrL2RyYWcgYXJvdW5kIHRoZSBpbmdyZWRpZW50cyB0byBleHBsb3JlIScKICAgICAgfQogICAgfSwKCiAgICBoZWxwZXJUZXh0KCkgewogICAgICBpZiAodGhpcy5zdGVwcGVyIDwgdGhpcy5zdGVwTGlzdC5sZW5ndGggLSAxKSB7CiAgICAgICAgcmV0dXJuICJQYXJ0ICIgKyAodGhpcy5zdGVwcGVyICsgMSkgKyAiIG9mICIgKyB0aGlzLnN0ZXBMaXN0Lmxlbmd0aAogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAnJwogICAgICB9CiAgICB9LAoKICAgIGZvcm1hdEFjdGl2ZU5vZGUoKXsKICAgICAgbGV0IG5ld05hbWUgPSB0aGlzLmFjdGl2ZU5vZGUucmVwbGFjZSgvXlx3LywgYyA9PiBjLnRvVXBwZXJDYXNlKCkpLnNwbGl0KCcgJykuam9pbignICcpCiAgICAgIHJldHVybiBuZXdOYW1lCiAgICB9LAoKICAgIGltZ0FjdGl2ZU5vZGUoKSB7CiAgICAgIGxldCBuZXdOYW1lIAogICAgICBpZiAodGhpcy5zdGVwcGVyIDwgdGhpcy5zdGVwTGlzdC5sZW5ndGggLSAxICkgewogICAgICAgIG5ld05hbWUgPSAiaW5ncmVkaWVudHMvU3BpY3lfZmxhdm91cl8iK3RoaXMuYWN0aXZlTm9kZS5yZXBsYWNlKC9eXHcvLCBjID0+IGMudG9Mb3dlckNhc2UoKSkuc3BsaXQoJyAnKS5qb2luKCcnKSArICIucG5nIgogICAgICB9IGVsc2UgewogICAgICAgIG5ld05hbWUgPSAiaW5ncmVkaWVudHMvU3BpY3lfIit0aGlzLmFjdGl2ZU5vZGUucmVwbGFjZSgvXlx3LywgYyA9PiBjLnRvTG93ZXJDYXNlKCkpLnNwbGl0KCcgJykuam9pbignJykrIi5wbmciCiAgICAgIH0KICAgICAgcmV0dXJuIG5ld05hbWUKICAgIH0sCgogICAgc2F1Y2VQZXJjZW50YWdlKCkgewogICAgICByZXR1cm4gTWF0aC5jZWlsKHRoaXMuYWN0aXZlTm9kZVNhdWNlcy90aGlzLmFsbFNhdWNlcyAqIDEwMCkKICAgIH0sCgogICAgbm9kZXMoKSB7CiAgICAgIGxldCBub2RlcyA9IHRoaXMubm9kZUxpc3Quc2xpY2UoKTsKICAgICAgbGV0IG5vZGVJZHMgPSBbXTsKICAgICAgbm9kZXMgPSBub2Rlcy5maWx0ZXIobm9kZSA9PiB7CiAgICAgICAgaWYgKG5vZGVJZHMuaW5kZXhPZihub2RlLmlkKSA9PT0gLTEpIHsKICAgICAgICAgIG5vZGVJZHMucHVzaChub2RlLmlkKTsKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIG5vZGVzOwogICAgfSwKCiAgICBsZWdlbmQoKXsKICAgICAgbGV0IGxlZ2VuZEJhc2UgPSBbXTsKICAgICAgZm9yIChsZXQgaSBpbiB0aGlzLm5vZGVDb2xvcikgewogICAgICAgIGxldCBjb2xvciA9IHRoaXMubm9kZUNvbG9yW2ldOwogICAgICAgIGxldCBtZWFuaW5nID0gdGhpcy5mbGF2b3JzW2ldOwogICAgICAgIGxlZ2VuZEJhc2UucHVzaCh7Y29sb3IsIG1lYW5pbmd9KTsKICAgICAgfQogICAgICByZXR1cm4gbGVnZW5kQmFzZTsKICAgIH0sCgogICAgbGlua3MoKSB7CiAgICAgIHJldHVybiB0aGlzLmxpbmtMaXN0OwogICAgfSwKICB9LAogIHdhdGNoOiB7CiAgICBib2R5U3RyZW5ndGg6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLmluaXREYXRhKCk7CiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuaW5pdERyYWdUaWNrWm9vbSgpOwogICAgICB9KTsKICAgIH0sCiAgICBsaW5rRGlzdGFuY2U6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLmluaXREYXRhKCk7CiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuaW5pdERyYWdUaWNrWm9vbSgpOwogICAgICB9KTsKICAgIH0sCiAgICBub2RlczogZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMuaW5pdERhdGEoKTsKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5pbml0RHJhZ1RpY2tab29tKCk7CiAgICAgIH0pOwogICAgfQogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmluaXREYXRhKCk7CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0RGF0YSgpCiAgICB0aGlzLmluaXREcmFnVGlja1pvb20oKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBoaWdobGlnaHRTZWxlY3RpdmUoYWN0aXZlSW5kZXgsIGRlY3JlYXNlT3BhY2l0eSkgewogICAgICAvLyBIaWdobGlnaHQgdGhlIHJpZ2h0IHRoaW5ncwogICAgICAvLyBDaGVjayBpZiBjaGlsaSBvciBvdGhlciBzdGVwcwogICAgICBpZiAoYWN0aXZlSW5kZXggPiAtMSkgewogICAgICAgIGxldCBpbmdyZWRpZW50cyA9IHRoaXMucHJvZmlsZUluZ3JlZGllbnRzW2FjdGl2ZUluZGV4XQogICAgICAgIHRoaXMuaGlnaGxpZ2h0Tm9kZShpbmdyZWRpZW50cywgZmFsc2UsIGZhbHNlLCBkZWNyZWFzZU9wYWNpdHkpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGV0IGhpZ2hsaWdodExpbmtzID0gdGhpcy5zdGVwcGVyID09PSAwID8gdHJ1ZSA6IGZhbHNlCiAgICAgICAgdGhpcy5oaWdobGlnaHROb2RlKGFjdGl2ZU5vZGUsIGhpZ2hsaWdodExpbmtzLCB0cnVlLCBkZWNyZWFzZU9wYWNpdHkpCiAgICAgIH0KCiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICB9LAoKICAgIGdvQmFjayAoKSB7CiAgICAgIGlmICh0aGlzLnN0ZXBwZXIgLSAxID49IDAgKSB7CiAgICAgICAgLy9kMy5zZWxlY3QoJyNsZWdlbmQnKS5zZWxlY3QoJ3N2ZycpLnJlbW92ZSgpCiAgICAgICAgdGhpcy5zdGVwcGVyIC09MQogICAgICAgIGxldCBzdGVwID0gdGhpcy5zdGVwTGlzdFt0aGlzLnN0ZXBwZXJdCiAgICAgICAgdGhpcy5hY3RpdmVOb2RlID0gc3RlcC5oaWdobGlnaHQKICAgICAgICB0aGlzLmFjdGl2ZU5vZGVTaWRlYmFyID0gc3RlcC5zaWRlYmFydGV4dAogICAgICAgIGxldCBoaWdobGlnaHRzID0gdGhpcy5oaWdobGlnaHRGbGF2b3JzW3RoaXMuc3RlcHBlcl0KICAgICAgICAKICAgICAgICAvLyBHb2VzIHRocm91Z2ggaGlnaGxpZ2h0ZWQgZmxhdm9yIHByb2ZpbGVzIAogICAgICAgIGZvciAobGV0IGhpIGluIGhpZ2hsaWdodHMpIHsKICAgICAgICAgIGxldCBoaWdobGlnaHQgPSBoaWdobGlnaHRzW2hpXQogICAgICAgICAgaWYgKGhpID4gMCkgewogICAgICAgICAgICB0aGlzLmhpZ2hsaWdodFNlbGVjdGl2ZShoaWdobGlnaHQsIGZhbHNlKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5oaWdobGlnaHRTZWxlY3RpdmUoaGlnaGxpZ2h0LCB0cnVlKQogICAgICAgICAgfQogICAgICAgIH0gCiAgICAgIH0gCiAgICB9LAoKICAgIGdvRm9yd2FyZCAoKSB7CiAgICAgIHRoaXMuc3RlcHBlciArPTEKICAgICAgaWYgKHRoaXMuc3RlcHBlciA8IHRoaXMuc3RlcExpc3QubGVuZ3RoIC0gMSkgewogICAgICAgIGxldCBzdGVwID0gdGhpcy5zdGVwTGlzdFt0aGlzLnN0ZXBwZXJdCiAgICAgICAgdGhpcy5hY3RpdmVOb2RlID0gc3RlcC5oaWdobGlnaHQKICAgICAgICB0aGlzLmFjdGl2ZU5vZGVTaWRlYmFyID0gc3RlcC5zaWRlYmFydGV4dAogICAgICAgIGxldCBoaWdobGlnaHRzID0gdGhpcy5oaWdobGlnaHRGbGF2b3JzW3RoaXMuc3RlcHBlcl0KICAgICAgICAKICAgICAgICAvLyBHb2VzIHRocm91Z2ggaGlnaGxpZ2h0ZWQgZmxhdm9yIHByb2ZpbGVzIAogICAgICAgIGZvciAobGV0IGhpIGluIGhpZ2hsaWdodHMpIHsKICAgICAgICAgIGxldCBoaWdobGlnaHQgPSBoaWdobGlnaHRzW2hpXQogICAgICAgICAgaWYgKGhpID4gMCkgewogICAgICAgICAgICB0aGlzLmhpZ2hsaWdodFNlbGVjdGl2ZShoaWdobGlnaHQsIGZhbHNlKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5oaWdobGlnaHRTZWxlY3RpdmUoaGlnaGxpZ2h0LCB0cnVlKQogICAgICAgICAgfQogICAgICAgIH0gCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zdGVwcGVyID0gMwogICAgICAgIHRoaXMuYWN0aXZlTm9kZSA9ICdjaGlsbGknCiAgICAgICAgdGhpcy5hY3RpdmVOb2RlU2F1Y2VzID0gNDUKICAgICAgICB0aGlzLmFjdGl2ZU5vZGVQcm9maWxlID0gMwogICAgICAgIHRoaXMuYWN0aXZlTm9kZUNvbG9yID0gdGhpcy5ub2RlQ29sb3JbdGhpcy5hY3RpdmVOb2RlUHJvZmlsZV0KICAgICAgICB0aGlzLmFjdGl2ZU5vZGVTaWRlYmFyID0gJ0hvdmVyL2NsaWNrIG9uIHRoZSBjaXJjbGVzIHRvIGZpbmQgb3V0IG1vcmUgYWJvdXQgZWFjaCBpbmdyZWRpZW50LicKICAgICAgICB0aGlzLmFjdGl2ZU5vZGVWYXJpYW50cyA9IG51bGwKICAgICAgICB0aGlzLm5vU2VsZWN0ZWRTdGF0ZSgpOwogICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICAgIH0KICAgIH0sCgogICAgdXBkYXRlKCl7CiAgICAgIGQzLnNlbGVjdCgnI2NoYXJ0Jykuc2VsZWN0KCdzdmcnKS5yZW1vdmUoKQogICAgICB0aGlzLnN2ZyA9IHRoaXMuZ2V0U3ZnKCkKICAgICAgdGhpcy5kcmF3Q2hhcnQoKQogICAgfSwKCiAgICBnZXREYXRhICgpIHsKICAgICAgaWYgKCF0aGlzLmpzb25VUkwpIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSBwcm92aWRlIGVpdGhlciBkYXRhIG9yIGpzb25VUkwnKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucHJvY2Vzc0pTT04odGhpcy5qc29uVVJMKQogICAgICAgIHRoaXMucHJvY2Vzc0NTVih0aGlzLmNzdlVSTCkKICAgICAgfQogICAgfSwKCiAgICBnZXRTdHJpbmcocm93KSB7CiAgICAgIGxldCBsYWJlbCA9IHJvd1snY291bnRyeSddLmluY2x1ZGVzKCdtZWFuJykgPyAnQXZlcmFnZSB2YWx1ZSBmb3IgJyArIHJvd1snZWxlbWVudCddIDogcm93Wydjb3VudHJ5J10gCiAgICAgIGxldCB2YWx1ZSA9IGxhYmVsICsgJzogJyArIChyb3dbdGhpcy5hY3RpdmVJbmRleF0gPyBNYXRoLnJvdW5kKHJvd1t0aGlzLmFjdGl2ZUluZGV4XSAqIDEwKSAvIDEwIDogJ05JTCcpCiAgICAgIHJldHVybiB2YWx1ZQogICAgfSwKCiAgICBwcm9jZXNzQ1NWICh1cmwpIHsKICAgICAgY3N2KHVybCkudGhlbigoZGF0YSkgPT4gewogICAgICAgIHRoaXMuc3RlcExpc3QgPSBkYXRhOwogICAgICAgIGRhdGEuZm9yRWFjaChkID0+IHsKICAgICAgICAgIGxldCBmbGF2b3JzID0gZC5mbGF2b3VycHJvZmlsZS5zcGxpdCgnLCcpCiAgICAgICAgICBsZXQgbmV3Rmxhdm9ycyA9IFtdCiAgICAgICAgICBmb3IgKGxldCBpIGluIGZsYXZvcnMpIHsKICAgICAgICAgICAgbmV3Rmxhdm9ycy5wdXNoKHBhcnNlSW50KGZsYXZvcnNbaV0pKQogICAgICAgICAgfQogICAgICAgICAgdGhpcy5oaWdobGlnaHRGbGF2b3JzLnB1c2gobmV3Rmxhdm9ycykKICAgICAgICB9KQogICAgICAgIAogICAgICAgIHRoaXMuYWN0aXZlTm9kZSA9IHRoaXMuc3RlcExpc3RbdGhpcy5zdGVwcGVyXS5oaWdobGlnaHQKICAgICAgICB0aGlzLmFjdGl2ZU5vZGVDb2xvciA9IHRoaXMubm9kZUNvbG9yW3RoaXMuc3RlcExpc3RbdGhpcy5zdGVwcGVyXV0KICAgICAgICB0aGlzLmFjdGl2ZU5vZGVTaWRlYmFyID0gdGhpcy5zdGVwTGlzdFt0aGlzLnN0ZXBwZXJdLnNpZGViYXJ0ZXh0CgogICAgICAgIGxldCBoaWdobGlnaHRzID0gdGhpcy5oaWdobGlnaHRGbGF2b3JzW3RoaXMuc3RlcHBlcl0KICAgICAgICAKICAgICAgICAvLyBHb2VzIHRocm91Z2ggaGlnaGxpZ2h0ZWQgZmxhdm9yIHByb2ZpbGVzIAogICAgICAgIGZvciAobGV0IGhpIGluIGhpZ2hsaWdodHMpIHsKICAgICAgICAgIGxldCBoaWdobGlnaHQgPSBoaWdobGlnaHRzW2hpXQogICAgICAgICAgaWYgKGhpID4gMCkgewogICAgICAgICAgICB0aGlzLmhpZ2hsaWdodFNlbGVjdGl2ZShoaWdobGlnaHQsIGZhbHNlKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5oaWdobGlnaHRTZWxlY3RpdmUoaGlnaGxpZ2h0LCB0cnVlKQogICAgICAgICAgfQogICAgICAgICAgCiAgICAgICAgfQogICAgICB9KQogICAgfSwKCiAgICBwcm9jZXNzSlNPTiAodXJsKSB7CiAgICAgIGpzb24odXJsKS50aGVuKChkYXRhKSA9PiB7CiAgICAgICAgdGhpcy5saW5rTGlzdCA9IGRhdGEubGlua3MKICAgICAgICB0aGlzLm5vZGVMaXN0ID0gZGF0YS5ub2RlcwoKICAgICAgICB0aGlzLm5vZGVMaXN0LmZvckVhY2goIG5vZGU9PiB7CiAgICAgICAgICBpZiAobm9kZS5wcm9maWxlIGluIHRoaXMucHJvZmlsZUluZ3JlZGllbnRzID09PSBmYWxzZSkgewogICAgICAgICAgICB0aGlzLnByb2ZpbGVJbmdyZWRpZW50c1tub2RlLnByb2ZpbGVdID0gW10KICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLnByb2ZpbGVJbmdyZWRpZW50c1tub2RlLnByb2ZpbGVdLnB1c2gobm9kZS5pZCk7CiAgICAgICAgfSkKCiAgICAgICAgdGhpcy5tb3VudCA9IHRydWUKICAgICAgICB0aGlzLnVwZGF0ZSgpCiAgICAgIH0pCiAgICB9LAoKICAgIGdldFN2ZyAoKSB7CiAgICAgIGNvbnN0IHsgc3ZnV2lkdGgsIHN2Z0hlaWdodCB9ID0gdGhpcwogICAgICBjb25zdCB7IG1hcmdpbiB9ID0gdGhpcwoKICAgICAgdGhpcy5zdmdXaWR0aCA9IHRoaXMud2lkdGgKICAgICAgdGhpcy5zdmdIZWlnaHQgPSB0aGlzLmhlaWdodAogICAgICBjb25zdCB3aWR0aCA9IHRoaXMuc3ZnV2lkdGggKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodAogICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLnN2Z0hlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tCgogICAgICBsZXQgc3ZnID0gZDMuc2VsZWN0KCIjY2hhcnQiKS5hcHBlbmQoInN2ZyIpCiAgICAgICAgICAgICAgLmF0dHIoIndpZHRoIiwgd2lkdGgpCiAgICAgICAgICAgICAgLmF0dHIoImhlaWdodCIsIGhlaWdodCkKICAgICAgICAgICAgICAuYXR0cigiaWQiLCAiY29udGFpbmVyIikKICAgICAgICAgICAgICAuY2FsbCh0aGlzLnJlc3BvbnNpdmVmeSk7CgogICAgICByZXR1cm4gc3ZnCiAgICB9LAoKICAgIGRyYXdDaGFydCgpIHsKICAgICAgbGV0IGVkZ2VzIAogICAgICBpZiAodGhpcy5jdXJ2ZXMpIHsKICAgICAgICBlZGdlcyA9IHRoaXMuc3ZnLmFwcGVuZCgiZyIpCiAgICAgICAgICAuc2VsZWN0QWxsKCIubGluayIpCiAgICAgICAgICAuZGF0YSh0aGlzLmxpbmtzKQogICAgICAgICAgLmpvaW4oInBhdGgiKQogICAgICAgICAgLmF0dHIoIm9wYWNpdHkiLCAwLjMpCiAgICAgICAgICAuYXR0cigic3Ryb2tlIiwgdGhpcy5saW5rU3Ryb2tlKQogICAgICAgICAgLmF0dHIoImZpbGwiLCAidHJhbnNwYXJlbnQiKQogICAgICAgICAgLmF0dHIoJ2NsYXNzJywgZnVuY3Rpb24oZCkgewogICAgICAgICAgICBsZXQgc291cmNlID0gZC5zb3VyY2Uuc3BsaXQoJyAnKS5qb2luKCctJyk7CiAgICAgICAgICAgIGxldCB0YXJnZXQgPSBkLnRhcmdldC5zcGxpdCgnICcpLmpvaW4oJy0nKTsKICAgICAgICAgICAgcmV0dXJuICdsaW5rIGVsZW1lbnQgJyArIHNvdXJjZSArICcgJyArIHRhcmdldDsKICAgICAgICAgICAgfSkKICAgICAgICAgIC5hdHRyKCdzdHJva2UtbGluZWNhcCcsICdyb3VuZCcpCiAgICAgICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGQudmFsdWUqMC43NTsKICAgICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGVkZ2VzID0gdGhpcy5zdmcuYXBwZW5kKCJnIikKICAgICAgICAuc2VsZWN0QWxsKCIubGluayIpCiAgICAgICAgLmRhdGEodGhpcy5saW5rcykKICAgICAgICAuZW50ZXIoKS5hcHBlbmQoImxpbmUiKQogICAgICAgIC5hdHRyKCdjbGFzcycsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgIGxldCBzb3VyY2UgPSBkLnNvdXJjZS5zcGxpdCgnICcpLmpvaW4oJy0nKTsKICAgICAgICAgIGxldCB0YXJnZXQgPSBkLnRhcmdldC5zcGxpdCgnICcpLmpvaW4oJy0nKTsKICAgICAgICAgIHJldHVybiAnbGluayBlbGVtZW50ICcgKyBzb3VyY2UgKyAnICcgKyB0YXJnZXQ7CiAgICAgICAgICB9KQogICAgICAgIC5hdHRyKCdvcGFjaXR5JywgMC4zKQogICAgICAgIC5hdHRyKCdzdHJva2UtbGluZWNhcCcsICdyb3VuZCcpCiAgICAgICAgLmF0dHIoJ3N0cm9rZScsIHRoaXMubGlua1N0cm9rZSkKICAgICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGQudmFsdWUqMC43NTsKICAgICAgICAgIH0pOwogICAgICB9CgogICAgICBsZXQgbm9kZXMgPSB0aGlzLnN2Zy5hcHBlbmQoImciKQogICAgICAgIC5zZWxlY3RBbGwoIi5ub2RlIikKICAgICAgICAuZGF0YSh0aGlzLm5vZGVzKQogICAgICAgIC5lbnRlcigpLmFwcGVuZCgnY2lyY2xlJykKICAgICAgICAuYXR0cignaWQnLCAoZCkgPT4gZC5pbmRleCkKICAgICAgICAuYXR0cignY2xhc3MnLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICBsZXQgbm9kZUNsYXNzPScnCiAgICAgICAgICByZXR1cm4gJ25vZGUgZWxlbWVudCAnICsgZC5pZC5zcGxpdCgnICcpLmpvaW4oJy0nKTsKICAgICAgICAgIH0pCiAgICAgICAgLmF0dHIoJ2ZpbGwnLCAoZCkgPT4gdGhpcy5ub2RlQ29sb3JbZFsncHJvZmlsZSddXSkKICAgICAgICAuYXR0cigncicsIChkKSA9PiBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMSwgNDVdKS5yYW5nZShbMTYsIDQwXSkoZC5jb3VudCkpCiAgICAgICAgLm9uKCdtb3VzZW92ZXInLCAoZCwgZSwgbm9kZXMpID0+IHRoaXMubm9kZU1vdXNlb3ZlcihkLCBlLCBub2RlcykpCiAgICAgICAgLm9uKCdtb3VzZW91dCcsIChkLCBlLCBub2RlcykgPT4gdGhpcy5ub2RlTW91c2VvdXQoZCwgZSwgbm9kZXMpKTsKCiAgICAgIGxldCBibGFja091dCA9IHRoaXMuYmxhY2tPdXQKCiAgICAgIC8vIEFkZCBzaW5nbGUgbGluZSB0ZXh0CiAgICAgIHRoaXMuc3ZnLmFwcGVuZCgiZyIpCiAgICAgICAgLnNlbGVjdEFsbCgiLnRleHQiKQogICAgICAgIC5kYXRhKHRoaXMubm9kZXMpCiAgICAgICAgLmVudGVyKCkKICAgICAgICAuYXBwZW5kKCd0ZXh0JykKICAgICAgICAuYXR0cignY2xhc3MnLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICBsZXQgbm9kZUNsYXNzPScnCiAgICAgICAgICByZXR1cm4gJ25vZGUtdGV4dCAnICsgZC5pZC5zcGxpdCgnICcpLmpvaW4oJy0nKTsKICAgICAgICB9KQogICAgICAgIC5odG1sKGZ1bmN0aW9uIChkKSB7IAogICAgICAgICAgaWYgKGQuaWQuc3BsaXQoJyAnKS5sZW5ndGggPiAxKSB7CiAgICAgICAgICAgIGxldCBlbGVtZW50cyA9IGQuaWQuc3BsaXQoJyAnKTsKICAgICAgICAgICAgbGV0IHN0cmluZyA9ICcnOwogICAgICAgICAgICBmb3IgKGxldCBpIGluIGVsZW1lbnRzKSB7CiAgICAgICAgICAgICAgaWYgKGkgPT0gMCkgewogICAgICAgICAgICAgICAgc3RyaW5nICs9ICc8dHNwYW4gZHk9Ii0wLjJlbSI+JysgZWxlbWVudHNbaV0gKyAnPC90c3Bhbj4nCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIChlbGVtZW50cy5sZW5ndGggPT0yKSB7CiAgICAgICAgICAgICAgICAgIHN0cmluZyArPSAnPHRzcGFuIGR4PSItMi41ZW0iIGR5PSIxZW0iPicrIGVsZW1lbnRzW2ldICsgJzwvdHNwYW4+JwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgc3RyaW5nICs9ICc8dHNwYW4gZHg9Ii0yLjJlbSIgZHk9IjFlbSI+JysgZWxlbWVudHNbaV0gKyAnPC90c3Bhbj4nCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBzdHJpbmc7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gJzx0c3BhbiBkeT0iMC40ZW0iPicrIGQuaWQgKyAnPC90c3Bhbj4nCiAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIC5hdHRyKCdmaWxsJywgKGQpID0+IHRoaXMubm9kZUNvbG9yW2RbJ3Byb2ZpbGUnXV0pCiAgICAgICAgLmF0dHIoJ2R4JywgMCkKICAgICAgICAuYXR0cignYWxpZ25tZW50LWJhc2VsaW5lJywgJ3RleHQtdG9wJykKICAgICAgICAuYXR0cigndGV4dC1hbmNob3InLCAnbWlkZGxlJykKICAgICAgICAuYXR0cignZmlsbCcsIChkKSA9PiBibGFja091dC5pbmRleE9mKHRoaXMubm9kZUNvbG9yW2QucHJvZmlsZV0pID4gLTEgPyAnYmctZ3JheS04MDAnIDogJ3doaXRlJykKICAgICAgICAuc3R5bGUoImZvbnQtd2VpZ2h0IiwgNzAwKQogICAgICAgIC5hdHRyKCdmb250LXNpemUnLCAoZCkgPT4gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oWzE2LCA2MF0pLnJhbmdlKFs0LCAxMF0pKGQucmFkaXVzKSkKICAgICAgICAub24oJ21vdXNlb3ZlcicsIChkLCBlLCBub2RlcykgPT4gdGhpcy5ub2RlTW91c2VvdmVyKGQsIGUsIG5vZGVzKSkKICAgICAgICAub24oJ21vdXNlb3V0JywgKGQsIGUsIG5vZGVzKSA9PiB0aGlzLm5vZGVNb3VzZW91dChkLCBlLCBub2RlcykpOwoKICAgICAgdGhpcy5pbml0RHJhZ1RpY2tab29tKCkKICAgIH0sCgogICAgbm9kZU1vdXNlb3ZlcihkLCBlLCBub2RlcykgewogICAgICBpZiAodGhpcy5zdGVwcGVyID09PSB0aGlzLnN0ZXBMaXN0Lmxlbmd0aC0xKSB7CiAgICAgICAgbGV0IHRhcmdldE5vZGUgPSBub2Rlc1tlXQogICAgICAgIHRoaXMuYWN0aXZlTm9kZSA9IGQuaWQKICAgICAgICB0aGlzLmFjdGl2ZU5vZGVDb2xvciA9IHRoaXMubm9kZUNvbG9yW2QucHJvZmlsZV0KICAgICAgICB0aGlzLmFjdGl2ZU5vZGVQcm9maWxlID0gZC5wcm9maWxlCiAgICAgICAgdGhpcy5hY3RpdmVOb2RlU2F1Y2VzID0gZC5jb3VudAogICAgICAgIHRoaXMuYWN0aXZlTm9kZVNpZGViYXIgPSBkLnRleHQKICAgICAgICB0aGlzLmFjdGl2ZU5vZGVWYXJpYW50cyA9IGQudmFyaWFudHMKICAgICAgICBsZXQgaGlnaGxpZ2h0TGlua3MgPSB0cnVlCgogICAgICAgIGlmICh0aGlzLnBpbm5lZC5sZW5ndGggPT09IDApIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24ubm9kZXMucHVzaChub2Rlcyk7CiAgICAgICAgICAgIHRoaXMuaGlnaGxpZ2h0Tm9kZSh0aGlzLmFjdGl2ZU5vZGUsIGhpZ2hsaWdodExpbmtzLCB0cnVlLCB0cnVlKTsKICAgICAgICAgIH0KICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgICB9CiAgICB9LAoKICAgIGhpZ2hsaWdodE5vZGUobm9kZU5hbWUsIGhpZ2hsaWdodExpbmtzLCBoaWdobGlnaHRPdGhlcnMsIGRlY3JlYXNlT3BhY2l0eSl7CiAgICAgIGxldCBub2RlQ2xhc3MgPSBbXQogICAgICAKICAgICAgaWYgKEFycmF5LmlzQXJyYXkobm9kZU5hbWUpKSB7CiAgICAgICAgZm9yIChsZXQgaSBpbiBub2RlTmFtZSl7CiAgICAgICAgICBub2RlQ2xhc3MucHVzaChub2RlTmFtZVtpXS5zcGxpdCgnICcpLmpvaW4oJy0nKSkKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbm9kZUNsYXNzID0gbm9kZU5hbWUuc3BsaXQoJyAnKS5qb2luKCctJyk7CiAgICAgIH0KCiAgICAgIGlmIChkZWNyZWFzZU9wYWNpdHkpIHsKICAgICAgICAvLyBEZWNyZWFzZSBvcGFjaXR5IGZvciBhbGwgaXJyZWxldmFudCBub2RlcyBhbmQgdGhlaXIgdGV4dAogICAgICAgIGQzLnNlbGVjdEFsbCgiLm5vZGUuZWxlbWVudCIpLnRyYW5zaXRpb24oKS5kdXJhdGlvbih0aGlzLnRyYW5zaXRpb25TcGVlZCkuc3R5bGUoIm9wYWNpdHkiLCAwLjA1KTsKICAgICAgICBkMy5zZWxlY3RBbGwoIi5ub2RlLXRleHQiKS50cmFuc2l0aW9uKCkuZHVyYXRpb24odGhpcy50cmFuc2l0aW9uU3BlZWQpLnN0eWxlKCJvcGFjaXR5IiwgMC4wNSk7CiAgICAgIH0KCiAgICAgIC8vIEhpZ2hsaWdodCByZWxldmFudCBub2RlcyBhbmQgdGhlaXIgdGV4dAogICAgICBpZiAoQXJyYXkuaXNBcnJheShub2RlQ2xhc3MpKSB7CiAgICAgICAgZm9yIChsZXQgaSBpbiBub2RlQ2xhc3MpewogICAgICAgICAgZDMuc2VsZWN0QWxsKCIubm9kZS5lbGVtZW50LiIrbm9kZUNsYXNzW2ldKS50cmFuc2l0aW9uKCkuZHVyYXRpb24odGhpcy50cmFuc2l0aW9uU3BlZWQpLnN0eWxlKCJvcGFjaXR5IiwgMSk7CiAgICAgICAgZDMuc2VsZWN0QWxsKCIubm9kZS10ZXh0LiIrbm9kZUNsYXNzW2ldKS50cmFuc2l0aW9uKCkuZHVyYXRpb24odGhpcy50cmFuc2l0aW9uU3BlZWQpLnN0eWxlKCJvcGFjaXR5IiwgMSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGQzLnNlbGVjdEFsbCgiLm5vZGUuZWxlbWVudC4iK25vZGVDbGFzcykudHJhbnNpdGlvbigpLmR1cmF0aW9uKHRoaXMudHJhbnNpdGlvblNwZWVkKS5zdHlsZSgib3BhY2l0eSIsIDEpOwogICAgICAgIGQzLnNlbGVjdEFsbCgiLm5vZGUtdGV4dC4iK25vZGVDbGFzcykudHJhbnNpdGlvbigpLmR1cmF0aW9uKHRoaXMudHJhbnNpdGlvblNwZWVkKS5zdHlsZSgib3BhY2l0eSIsIDEpOwogICAgICB9CgogICAgICAvLyBBcHBsaWNhYmxlIG9ubHkgdG8gbW91c2UgaW50ZXJhY3Rpb25zLCBhbmQgTk9UIHRvIHN0ZXBwZXIKICAgICAgaWYgKGhpZ2hsaWdodE90aGVycykgewogICAgICAgIGxldCBvdGhlck5vZGVzID0gdGhpcy5pZGVudGlmeVRhcmdldHMobm9kZU5hbWUpOwogICAgICAgIG90aGVyTm9kZXMuZm9yRWFjaChub2RlID0+IHsKICAgICAgICAgIGQzLnNlbGVjdEFsbCgiLm5vZGUuZWxlbWVudC4iKyBub2RlKS50cmFuc2l0aW9uKCkuZHVyYXRpb24odGhpcy50cmFuc2l0aW9uU3BlZWQpLnN0eWxlKCJvcGFjaXR5IiwgMSk7CiAgICAgICAgICBkMy5zZWxlY3RBbGwoIi5ub2RlLXRleHQuIisgbm9kZSkudHJhbnNpdGlvbigpLmR1cmF0aW9uKHRoaXMudHJhbnNpdGlvblNwZWVkKS5zdHlsZSgib3BhY2l0eSIsIDEpOwogICAgICAgIH0pCiAgICAgIH0KICAgICAgCiAgICAgIGlmIChkZWNyZWFzZU9wYWNpdHkpIHsKICAgICAgICAvLyBEZWNyZWFzZSBvcGFjaXR5IG9mIGlycmVsZXZhbnQgbGlua3MKICAgICAgICBkMy5zZWxlY3RBbGwoIi5saW5rLmVsZW1lbnQiKS50cmFuc2l0aW9uKCkuZHVyYXRpb24odGhpcy50cmFuc2l0aW9uU3BlZWQpLnN0eWxlKCJvcGFjaXR5IiwgMC4wMSk7CiAgICAgIH0KCiAgICAgIC8vIEhpZ2xpZ2h0IGxpbmtzCiAgICAgIGlmIChoaWdobGlnaHRMaW5rcykgewogICAgICAgIGxldCBzb3VyY2UgPSBub2RlTmFtZS5zcGxpdCgnICcpLmpvaW4oJy0nKQogICAgICAgIGxldCBzb3VyY2VDbGFzcyA9ICIubGluay5lbGVtZW50LiIgKyBzb3VyY2UKICAgICAgICBkMy5zZWxlY3RBbGwoc291cmNlQ2xhc3MpLnRyYW5zaXRpb24oKS5kdXJhdGlvbih0aGlzLnRyYW5zaXRpb25TcGVlZCkuc3R5bGUoIm9wYWNpdHkiLCAwLjMpOwogICAgICB9CiAgICB9LAoKICAgIGlkZW50aWZ5VGFyZ2V0cyhub2RlTmFtZSkgewogICAgICBsZXQgdGFyZ2V0Tm9kZXMgPSBbXQogICAgICBsZXQgY291bnQgPSAwCiAgICAgIHRoaXMubGlua3MuZm9yRWFjaChsaW5rID0+IHsKICAgICAgICBpZiAobGluay5zb3VyY2UuaWQgPT09IG5vZGVOYW1lIHx8IGxpbmsudGFyZ2V0LmlkID09PSBub2RlTmFtZSl7CiAgICAgICAgICBjb3VudCs9MTsKICAgICAgICB9CiAgICAgICAgaWYgKGxpbmsuc291cmNlLmlkID09PSBub2RlTmFtZSkgewogICAgICAgICAgdGFyZ2V0Tm9kZXMucHVzaChsaW5rLnRhcmdldC5pZC5zcGxpdCgnICcpLmpvaW4oJy0nKSk7CiAgICAgICAgfSAKICAgICAgICAKICAgICAgICBpZiAobGluay50YXJnZXQuaWQgPT09IG5vZGVOYW1lKSB7CiAgICAgICAgICB0YXJnZXROb2Rlcy5wdXNoKGxpbmsuc291cmNlLmlkLnNwbGl0KCcgJykuam9pbignLScpKTsKICAgICAgICB9CiAgICAgIH0pCiAgICAgIHJldHVybiB0YXJnZXROb2RlcwogICAgfSwKCiAgICBub2RlTW91c2VvdXQoZCwgZSwgbm9kZXMpIHsKICAgICAgaWYgKHRoaXMuc3RlcHBlciA9PT0gdGhpcy5zdGVwTGlzdC5sZW5ndGgtMSkgewogICAgICAgIC8vIGxldCB0YXJnZXROb2RlID0gbm9kZXNbZV0KICAgICAgICAvLyB0YXJnZXROb2RlLmNsYXNzTGlzdC5yZW1vdmUoInNlbGVjdGVkIik7CiAgICAgICAgaWYgKHRoaXMucGlubmVkLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgdGhpcy5ub1NlbGVjdGVkU3RhdGUoZSk7CiAgICAgICAgfQogICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICAgIH0KICAgIH0sCgogICAgbm9TZWxlY3RlZFN0YXRlKCkgewogICAgICBkMy5zZWxlY3RBbGwoIi5ub2RlLmVsZW1lbnQiKS50cmFuc2l0aW9uKCkuZHVyYXRpb24odGhpcy50cmFuc2l0aW9uU3BlZWQpLnN0eWxlKCJvcGFjaXR5IiwgMSk7CiAgICAgIGQzLnNlbGVjdEFsbCgiLmxpbmsuZWxlbWVudCIpLnRyYW5zaXRpb24oKS5kdXJhdGlvbih0aGlzLnRyYW5zaXRpb25TcGVlZCkuc3R5bGUoIm9wYWNpdHkiLCAwLjMpOwogICAgICBkMy5zZWxlY3RBbGwoIi5ub2RlLXRleHQiKS50cmFuc2l0aW9uKCkuZHVyYXRpb24odGhpcy50cmFuc2l0aW9uU3BlZWQpLnN0eWxlKCJvcGFjaXR5IiwgMSk7CiAgICB9LAoKICAgIHJlc3BvbnNpdmVmeShzdmcpIHsKICAgICAgLy8gZ2V0IGNvbnRhaW5lciArIHN2ZyBhc3BlY3QgcmF0aW8KICAgICAgdmFyIGNvbnRhaW5lciA9IGQzLnNlbGVjdChzdmcubm9kZSgpLnBhcmVudE5vZGUpLAogICAgICAgICAgd2lkdGggPSBwYXJzZUludChzdmcuc3R5bGUoIndpZHRoIikpLAogICAgICAgICAgaGVpZ2h0ID0gcGFyc2VJbnQoc3ZnLnN0eWxlKCJoZWlnaHQiKSksCiAgICAgICAgICBhc3BlY3QgPSB3aWR0aCAvIGhlaWdodDsKCiAgICAgIC8vIGFkZCB2aWV3Qm94IGFuZCBwcmVzZXJ2ZUFzcGVjdFJhdGlvIHByb3BlcnRpZXMsCiAgICAgIC8vIGFuZCBjYWxsIHJlc2l6ZSBzbyB0aGF0IHN2ZyByZXNpemVzIG9uIGluaXRhbCBwYWdlIGxvYWQKICAgICAgc3ZnLmF0dHIoInZpZXdCb3giLCAiMCAwICIgKyB3aWR0aCArICIgIiArIGhlaWdodCkKICAgICAgICAgIC8vLmF0dHIoInBlcnNlcnZlQXNwZWN0UmF0aW8iLCAieE1pbllNaWQiKQogICAgICAgICAgLmNhbGwocmVzaXplKTsKCiAgICAgIC8vIHRvIHJlZ2lzdGVyIG11bHRpcGxlIGxpc3RlbmVycyBmb3Igc2FtZSBldmVudCB0eXBlLCAKICAgICAgLy8geW91IG5lZWQgdG8gYWRkIG5hbWVzcGFjZSwgaS5lLiwgJ2NsaWNrLmZvbycKICAgICAgLy8gbmVjZXNzYXJ5IGlmIHlvdSBjYWxsIGludm9rZSB0aGlzIGZ1bmN0aW9uIGZvciBtdWx0aXBsZSBzdmdzCiAgICAgIC8vIGFwaSBkb2NzOiBodHRwczovL2dpdGh1Yi5jb20vbWJvc3RvY2svZDMvd2lraS9TZWxlY3Rpb25zI29uCiAgICAgIGQzLnNlbGVjdCh3aW5kb3cpLm9uKCJyZXNpemUuIiArIGNvbnRhaW5lci5hdHRyKCJpZCIpLCByZXNpemUpOwoKICAgICAgLy8gZ2V0IHdpZHRoIG9mIGNvbnRhaW5lciBhbmQgcmVzaXplIHN2ZyB0byBmaXQgaXQKICAgICAgZnVuY3Rpb24gcmVzaXplKCkgewogICAgICAgICAgdmFyIHRhcmdldFdpZHRoID0gcGFyc2VJbnQoY29udGFpbmVyLnN0eWxlKCJ3aWR0aCIpKSA+IDcwMCA/IDcwMCA6IHBhcnNlSW50KGNvbnRhaW5lci5zdHlsZSgid2lkdGgiKSk7CiAgICAgICAgICB2YXIgdGFyZ2V0SGVpZ2h0ID0gTWF0aC5yb3VuZCh0YXJnZXRXaWR0aCAvIGFzcGVjdCk7CiAgICAgICAgICBzdmcuYXR0cigid2lkdGgiLCB0YXJnZXRXaWR0aCk7CiAgICAgICAgICBzdmcuYXR0cigiaGVpZ2h0IiwgdGFyZ2V0SGVpZ2h0KTsKICAgICAgfQogICAgfSwKCiAgICBpbml0RGF0YSgpIHsKICAgICAgdGhpcy5mb3JjZSA9IGQzCiAgICAgICAgLmZvcmNlU2ltdWxhdGlvbih0aGlzLm5vZGVzKQogICAgICAgIC5mb3JjZSgKICAgICAgICAgICJsaW5rIiwKICAgICAgICAgIGQzLmZvcmNlTGluayh0aGlzLmxpbmtzKQogICAgICAgICAgICAuaWQoZCA9PiBkLmlkKQogICAgICAgICAgICAuZGlzdGFuY2UodGhpcy5saW5rRGlzdGFuY2UpCiAgICAgICAgKQogICAgICAgIC5mb3JjZSgiY2hhcmdlIiwgZDMuZm9yY2VNYW55Qm9keSgpLnN0cmVuZ3RoKHRoaXMuYm9keVN0cmVuZ3RoKSkgLy9UaGUgc3RyZW5ndGggb2YgdGhlIGF0dHJhY3Rpb24gb3IgcmVwdWxzaW9uCiAgICAgICAgLmZvcmNlKCdjb2xsaXNpb24nLCBkMy5mb3JjZUNvbGxpZGUoKS5yYWRpdXMoZnVuY3Rpb24oZCkgewogICAgICAgICAgcmV0dXJuIGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFsxLCA0NV0pLnJhbmdlKFsyMCwgNDBdKShkLmNvdW50KSswLjI1CiAgICAgICAgfSkpCiAgICAgICAgLmZvcmNlKAogICAgICAgICAgImNlbnRlciIsIAogICAgICAgICAgZDMuZm9yY2VDZW50ZXIodGhpcy53aWR0aC8yLCB0aGlzLmhlaWdodC8yKQogICAgICAgICkKICAgICAgICAub24oInRpY2siLCB0aGlzLnRpY2tlZCk7CiAgICB9LAoKICAgIHRpY2tlZCgpIHsKICAgICAgZDMuc2VsZWN0QWxsKCIuY2lyYyIpCiAgICAgICAgICAuYXR0cigiY3giLCAoZCkgPT4gZC54KQogICAgICAgICAgLmF0dHIoImN5IiwgKGQpID0+IGQueSk7CiAgICB9LAoKICAgIGluaXREcmFnVGlja1pvb20oKSB7CiAgICAgIGQzLnNlbGVjdEFsbCgiLm5vZGUiKS5jYWxsKHRoaXMuZHJhZyh0aGlzLmZvcmNlKSk7CiAgICAgIHRoaXMuZm9yY2Uub24oInRpY2siLCAoKSA9PiB7CiAgICAgICAgaWYgKHRoaXMuY3VydmVzKSB7CiAgICAgICAgICBkMy5zZWxlY3RBbGwoIi5saW5rIikKICAgICAgICAgIC5kYXRhKHRoaXMubGlua3MpCiAgICAgICAgICAuYXR0cignZCcsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgIGxldCBkeCA9IGQudGFyZ2V0LnggLSBkLnNvdXJjZS54OwogICAgICAgICAgICBsZXQgZHkgPSBkLnRhcmdldC55IC0gZC5zb3VyY2UueTsKICAgICAgICAgICAgbGV0IGRyID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KTsKICAgICAgICAgICAgcmV0dXJuICJNIiArIGQuc291cmNlLnggKyAiLCIgKyBkLnNvdXJjZS55ICsgIkEiICsgZHIgKyAiLCIgKyBkciArICIgMSAwLDEgIiArIGQudGFyZ2V0LnggKyAiLCIgKyBkLnRhcmdldC55OwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGQzLnNlbGVjdEFsbCgiLmxpbmsiKQogICAgICAgICAgLmRhdGEodGhpcy5saW5rcykKICAgICAgICAgIC5hdHRyKCJ4MSIsIGQgPT4gZC5zb3VyY2UueCkKICAgICAgICAgIC5hdHRyKCJ5MSIsIGQgPT4gZC5zb3VyY2UueSkKICAgICAgICAgIC5hdHRyKCJ4MiIsIGQgPT4gZC50YXJnZXQueCkKICAgICAgICAgIC5hdHRyKCJ5MiIsIGQgPT4gZC50YXJnZXQueSk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIGQzLnNlbGVjdEFsbCgiLm5vZGUiKQogICAgICAgICAgLmRhdGEodGhpcy5ub2RlcykKICAgICAgICAgIC5hdHRyKCJjeCIsIGQgPT4gZC54KQogICAgICAgICAgLmF0dHIoImN5IiwgZCA9PiBkLnkpOwoKICAgICAgICBkMy5zZWxlY3RBbGwoIi5ub2RlLXRleHQiKQogICAgICAgICAgLmRhdGEodGhpcy5ub2RlcykKICAgICAgICAgIC5hdHRyKCJ4IiwgZCA9PiBkLngpCiAgICAgICAgICAuYXR0cigieSIsIGQgPT4gZC55KTsKICAgICAgfSk7CiAgICB9LAoKICAgIGRyYWcoc2ltdWxhdGlvbikgewogICAgICBmdW5jdGlvbiBkcmFnc3RhcnRlZChkKSB7CiAgICAgICAgaWYgKCFkMy5ldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMC4yKS5yZXN0YXJ0KCk7CiAgICAgICAgZC5meCA9IGQueDsKICAgICAgICBkLmZ5ID0gZC55OwogICAgICB9CgogICAgICBmdW5jdGlvbiBkcmFnZ2VkKGQpIHsKICAgICAgICBkLmZ4ID0gZDMuZXZlbnQueDsKICAgICAgICBkLmZ5ID0gZDMuZXZlbnQueTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gZHJhZ2VuZGVkKGQpIHsKICAgICAgICBpZiAoIWQzLmV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwKTsKICAgICAgICBkLmZ4ID0gbnVsbDsKICAgICAgICBkLmZ5ID0gbnVsbDsKICAgICAgfQoKICAgICAgcmV0dXJuIGQzCiAgICAgICAgLmRyYWcoKQogICAgICAgIC5vbigic3RhcnQiLCBkcmFnc3RhcnRlZCkKICAgICAgICAub24oImRyYWciLCBkcmFnZ2VkKQogICAgICAgIC5vbigiZW5kIiwgZHJhZ2VuZGVkKTsKICAgIH0sCiAgfQp9Owo="},{"version":3,"sources":["Network.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Network.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"app\" class=\"flex flex-col p-4\" >\n    <!-- Header -->\n    <div class=\"header flex flex-row items-start\">\n      <button v-on:click=\"goBack()\"\n        :class=\"`sm:text-base md:text-lg lg:text-xl btn-orange ` \n        + (stepper > 0 ? `` : `opacity-25 cursor-not-allowed`)\">\n        <\n      </button>\n\n      <div class=\"w-4/5 px-2\">\n        <div class='top-header text-tiny font-bold text-black sm:text-tiny md:text-base lg:text-lg'>\n          {{ headerText }}\n        </div>\n        <div class='sub-header mt-2 text-xs sm:text-sm md:text-tiny lg:text-tiny justify-center'>\n          <div class=\"px-1\">\n            {{helperText}}\n          </div>\n          <div v-if=\"stepper === stepList.length-1\" class='inline-flex items-center'>\n            <div class=\"inline-flex items-center\">\n              <span class=\"dot1\"></span>\n              <span class=\"dot2\"></span>\n            </div>\n            <div class=\"mx-1\">\n              Number of recipes\n            </div>\n            <div class=\"ml-1 flex flex-col justify-center\">\n              <span class=\"rectangle1\" :style=\"{'background-color': linkStroke}\"></span>\n              <span class=\"rectangle2\" :style=\"{'background-color': linkStroke}\"></span>\n            </div>\n            <div class=\"ml-1\">\n              Number of co-occurences\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button v-on:click=\"goForward()\"\n        :class=\"`sm:text-base md:text-lg lg:text-xl btn-orange ` \n        + (stepper === stepList.length - 1 ? `opacity-25 cursor-not-allowed` : ``)\">\n        >\n      </button>\n    </div>\n\n    <div id=\"chart\" class=\"justify-center flex my-1\"> \n    </div>\n\n    <div id='sidebar' class=\"flex flex-no-wrap\">\n      <div\n        :class=\"`flex mr-1 ` + (stepper === stepList.length - 1 ? \n                  `h-12 w-12 sm:h-12 sm:w-12 md:h-12 md:w-12 lg:h-16 lg:w-16` : ` h-1/5 w-1/5 sm:h-1/4 sm:w-1/4 md:h-1/5 md:w-1/5 items-start justify-start`)\"\n      > \n        <img :class=\"(stepper === stepList.length - 1 ? `` \n          : '')\" \n          :src=\"imgActiveNode\" />\n      </div>\n\n\n      <div class=\"sidebar-text ml-2\">\n        \n        <!-- Exploration --> \n        <div v-if=\"stepper === stepList.length - 1\">\n          <div class='text-sm sm:text-sm md:text-base lg:text-lg pb-1'>\n            <div :style=\"{'background-color': activeNodeColor}\"\n              :class=\"`rounded inline-flex items-center px-1 ` + (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\">\n                <b class=\"sauces\">{{formatActiveNode}} </b>\n              </div>\n            \n            can be found in <b class=\"sauces\"> {{activeNodeSauces}} / {{allSauces}} sauces (~{{saucePercentage}}%)</b>\n          </div>\n\n          <!-- Types of ingredient --> \n          <div v-if=\"activeNodeSidebar.length > 0\" class=\"text-xs sm:text-xs md:text-sm lg:text-sm\">\n            <div class=\"pt-1\">\n              {{activeNodeSidebar}}\n            </div>\n            <div v-if=\"activeNodeVariants !== null\"  class=\"pt-1\">\n              <b class=\"sauces\"> Types of {{activeNode}}: </b> {{activeNodeVariants}}\n            </div>\n          </div>\n        </div>\n        \n        <!-- Stepper -->\n        <div v-else \n          :class=\"`text-xs sm:text-xs md:text-sm lg:text-sm ` + (stepper === -1 ? 'font-bold' : '')\">\n            <!-- Instructions-->\n            <div v-if=\"stepper === 0\">\n              <div class=\"mb-1\">\n              <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" \n                :style=\"{'background-color': nodeColor[5]}\"> Pungency </b> \n              describes foods that feel \"hot\"—in a spicy rather than temperature sense—but it also covers strong odours \n              and flavours, like onion and garlic. These foods lend complexity to \"heat\" and stimulate the nose as well as the mouth.\n              </div>\n              <div>\n                To show you how chilli gets paired with other ingredients in Asian chilli sauces, we label \n                <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[3]}\"> chilli </b> \n                and hot-tasting foods <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[3]}\"> \n                  \"hot spices\" </b> (e.g., peppercorns, mustards, wasabi). \n                  Their \"spiciness\" excites the appetite and invigorates by contrasting against other flavours.\n              </div>\n            </div>\n\n            <div v-if=\"stepper === 1\">\n              <div class=\"mb-1\">\n                  <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[2]}\"> \n                    Sweetness </b> tempers the intensity of other basic tastes. \n                    Asian sauces use various sweeteners, from rich, treacly palm sugar to toasty, malty rice syrups.\n              </div>\n              <div class=\"mb-1\">\n                <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[8]}\"> Sourness \n                  </b> clarifies other flavours, cuts through richness, and lifts the overall meal. \n                  Asian sauces prefer citrus fruits and vinegar for this.\n              </div>\n              <div class=\"mb-1\">\n                <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[6]}\"> Saltiness </b> \n                heightens and completes all other flavours. Essential to our health in moderation; \n                salt has been a key way to preserve food.\n              </div>\n              <div class=\"mb-1\">\n                <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[4]}\"> Umami </b> \n                savouriness whets the appetite, imparting a full mouthfeel and satiety. \n                Its source—glutamates—are common in preserved protein products. \n                Asian sauces use these products (often salty themselves) more often than they do pure salt. \n              </div>\n              <div>\n                <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[7]}\"> Bitter </b> \n                grounds sweetness and adds complexity. Some sauces use bitter vegetables, unripened fruits, \n                and herbs to balance robust flavours.\n              </div>\n            </div>\n\n            <div v-if=\"stepper === 2\">\n              <div class=\"mb-1\">\n                <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[0]}\"> Fat </b> \n                locks in other flavours and spreads them throughout a dish. Fat diminishes other basic tastes; \n                in chilli sauces, it mellows spiciness.\n              </div>\n              <div class=\"mb-1\">\n                <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[1]}\"> Aromatic spices </b> \n                are plant substances used sparingly for flavouring rather than nutrition. Essentials in all Asian cuisines, \n                they are usually lightly fried to liberate their full flavour. Often, cuisines have distinct spice blends \n                (e.g., five spices and garam masala).\n              </div>\n              <div>\n                <b :class=\"`font-tag inline-flex rounded px-1 `+ (blackOut.includes(activeNodeColor) ? 'text-black' : 'text-white')\" :style=\"{'background-color':nodeColor[9]}\"> Texture </b> \n                shapes mouthfeel, a critical aspect of taste. All ingredients have texture, \n                but some are explicitly added for this. Starches and thickening sauces, such as \n                ketchup and sweet soy sauce, bind ingredients together.\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport { json, csv } from 'd3-fetch'\n//'../assets/js/mykey.js'\n// DOMTokenList.prototype.indexOf = Array.prototype.indexOf;\n\nexport default {\n  name: \"network\",\n  props: {\n    jsonURL: {\n      type: String,\n      default: () => 'ingredients_network_final.json'\n    },\n\n    csvURL: {\n      type: String,\n      default: () => 'sidebar_text_final.csv'\n    },\n    linkDistance: {\n      type: Number,\n      default: 35\n    },\n    // svg\n    svgSize: {\n      type: Object,\n      default: () => {\n        return {\n          width: window.innerWidth,\n          height: window.innerHeight\n        };\n      }\n    },\n    bodyStrength: {\n      type: Number,\n      default: -300\n    },\n\n    height: {\n      type: Number,\n      default: () => 325\n    },\n    \n    width: {\n      type: Number,\n      default: () => 325\n    },\n\n    margin: {\n      type: Object,\n      default: function () {\n        return {\n          top: 5,\n          right: 5,\n          bottom: 5,\n          left: 5\n        }\n      }\n    } \n  },\n  data() {\n    return {\n      selection: {\n        links: [],\n        nodes: []\n      },\n      pinned: [], \n      nodeList: [],\n      linkList: [],\n      stepList: [],\n      profileIngredients: [],\n      force: null,\n      zoom: d3.zoom(),\n      nodeColor: ['#FFDA95', '#FCB040', '#FF7629', '#E4140F', '#612348', '#006428',\n                '#33A844', '#A0B036', '#D0E820', '#D8CECB'],\n      blackOut: ['#FFDA95', '#D0E820', '#D8CECB', '#FCB040'],\n      highlightFlavors: [],\n      activeNode: 'Flavor',\n      activeNodeColor: 'black',\n      activeNodeProfile: 3,\n      activeNodeSidebar: 'Click on the arrows above to explore common flavours that are paired with chili.',\n      activeNodeVariants: '',\n      activeNodeSauces: 0,\n      allSauces: 45,\n      transitionSpeed: 200,\n      curves: true,\n      stepper: 0,\n      linkStroke: '#b38000',\n    };\n  },\n  computed: {\n    headerText(){\n      if (this.stepper < this.stepList.length -1) {\n        return 'What ingredients go with chilli?'\n      } else {\n        return 'Click/drag around the ingredients to explore!'\n      }\n    },\n\n    helperText() {\n      if (this.stepper < this.stepList.length - 1) {\n        return \"Part \" + (this.stepper + 1) + \" of \" + this.stepList.length\n      } else {\n        return ''\n      }\n    },\n\n    formatActiveNode(){\n      let newName = this.activeNode.replace(/^\\w/, c => c.toUpperCase()).split(' ').join(' ')\n      return newName\n    },\n\n    imgActiveNode() {\n      let newName \n      if (this.stepper < this.stepList.length - 1 ) {\n        newName = \"ingredients/Spicy_flavour_\"+this.activeNode.replace(/^\\w/, c => c.toLowerCase()).split(' ').join('') + \".png\"\n      } else {\n        newName = \"ingredients/Spicy_\"+this.activeNode.replace(/^\\w/, c => c.toLowerCase()).split(' ').join('')+\".png\"\n      }\n      return newName\n    },\n\n    saucePercentage() {\n      return Math.ceil(this.activeNodeSauces/this.allSauces * 100)\n    },\n\n    nodes() {\n      let nodes = this.nodeList.slice();\n      let nodeIds = [];\n      nodes = nodes.filter(node => {\n        if (nodeIds.indexOf(node.id) === -1) {\n          nodeIds.push(node.id);\n          return true;\n        } else {\n          return false;\n        }\n      });\n      return nodes;\n    },\n\n    legend(){\n      let legendBase = [];\n      for (let i in this.nodeColor) {\n        let color = this.nodeColor[i];\n        let meaning = this.flavors[i];\n        legendBase.push({color, meaning});\n      }\n      return legendBase;\n    },\n\n    links() {\n      return this.linkList;\n    },\n  },\n  watch: {\n    bodyStrength: function() {\n      this.initData();\n      this.$nextTick(function() {\n        this.initDragTickZoom();\n      });\n    },\n    linkDistance: function() {\n      this.initData();\n      this.$nextTick(function() {\n        this.initDragTickZoom();\n      });\n    },\n    nodes: function() {\n      this.initData();\n      this.$nextTick(function() {\n        this.initDragTickZoom();\n      });\n    }\n  },\n\n  created() {\n    this.initData();\n  },\n\n  mounted() {\n    this.getData()\n    this.initDragTickZoom();\n  },\n\n  methods: {\n    highlightSelective(activeIndex, decreaseOpacity) {\n      // Highlight the right things\n      // Check if chili or other steps\n      if (activeIndex > -1) {\n        let ingredients = this.profileIngredients[activeIndex]\n        this.highlightNode(ingredients, false, false, decreaseOpacity)\n      } else {\n        let highlightLinks = this.stepper === 0 ? true : false\n        this.highlightNode(activeNode, highlightLinks, true, decreaseOpacity)\n      }\n\n      this.$forceUpdate();\n    },\n\n    goBack () {\n      if (this.stepper - 1 >= 0 ) {\n        //d3.select('#legend').select('svg').remove()\n        this.stepper -=1\n        let step = this.stepList[this.stepper]\n        this.activeNode = step.highlight\n        this.activeNodeSidebar = step.sidebartext\n        let highlights = this.highlightFlavors[this.stepper]\n        \n        // Goes through highlighted flavor profiles \n        for (let hi in highlights) {\n          let highlight = highlights[hi]\n          if (hi > 0) {\n            this.highlightSelective(highlight, false)\n          } else {\n            this.highlightSelective(highlight, true)\n          }\n        } \n      } \n    },\n\n    goForward () {\n      this.stepper +=1\n      if (this.stepper < this.stepList.length - 1) {\n        let step = this.stepList[this.stepper]\n        this.activeNode = step.highlight\n        this.activeNodeSidebar = step.sidebartext\n        let highlights = this.highlightFlavors[this.stepper]\n        \n        // Goes through highlighted flavor profiles \n        for (let hi in highlights) {\n          let highlight = highlights[hi]\n          if (hi > 0) {\n            this.highlightSelective(highlight, false)\n          } else {\n            this.highlightSelective(highlight, true)\n          }\n        } \n      } else {\n        this.stepper = 3\n        this.activeNode = 'chilli'\n        this.activeNodeSauces = 45\n        this.activeNodeProfile = 3\n        this.activeNodeColor = this.nodeColor[this.activeNodeProfile]\n        this.activeNodeSidebar = 'Hover/click on the circles to find out more about each ingredient.'\n        this.activeNodeVariants = null\n        this.noSelectedState();\n        this.$forceUpdate();\n      }\n    },\n\n    update(){\n      d3.select('#chart').select('svg').remove()\n      this.svg = this.getSvg()\n      this.drawChart()\n    },\n\n    getData () {\n      if (!this.jsonURL) {\n        throw new Error('Please provide either data or jsonURL')\n      } else {\n        this.processJSON(this.jsonURL)\n        this.processCSV(this.csvURL)\n      }\n    },\n\n    getString(row) {\n      let label = row['country'].includes('mean') ? 'Average value for ' + row['element'] : row['country'] \n      let value = label + ': ' + (row[this.activeIndex] ? Math.round(row[this.activeIndex] * 10) / 10 : 'NIL')\n      return value\n    },\n\n    processCSV (url) {\n      csv(url).then((data) => {\n        this.stepList = data;\n        data.forEach(d => {\n          let flavors = d.flavourprofile.split(',')\n          let newFlavors = []\n          for (let i in flavors) {\n            newFlavors.push(parseInt(flavors[i]))\n          }\n          this.highlightFlavors.push(newFlavors)\n        })\n        \n        this.activeNode = this.stepList[this.stepper].highlight\n        this.activeNodeColor = this.nodeColor[this.stepList[this.stepper]]\n        this.activeNodeSidebar = this.stepList[this.stepper].sidebartext\n\n        let highlights = this.highlightFlavors[this.stepper]\n        \n        // Goes through highlighted flavor profiles \n        for (let hi in highlights) {\n          let highlight = highlights[hi]\n          if (hi > 0) {\n            this.highlightSelective(highlight, false)\n          } else {\n            this.highlightSelective(highlight, true)\n          }\n          \n        }\n      })\n    },\n\n    processJSON (url) {\n      json(url).then((data) => {\n        this.linkList = data.links\n        this.nodeList = data.nodes\n\n        this.nodeList.forEach( node=> {\n          if (node.profile in this.profileIngredients === false) {\n            this.profileIngredients[node.profile] = []\n          }\n\n          this.profileIngredients[node.profile].push(node.id);\n        })\n\n        this.mount = true\n        this.update()\n      })\n    },\n\n    getSvg () {\n      const { svgWidth, svgHeight } = this\n      const { margin } = this\n\n      this.svgWidth = this.width\n      this.svgHeight = this.height\n      const width = this.svgWidth + margin.left + margin.right\n      const height = this.svgHeight + margin.top + margin.bottom\n\n      let svg = d3.select(\"#chart\").append(\"svg\")\n              .attr(\"width\", width)\n              .attr(\"height\", height)\n              .attr(\"id\", \"container\")\n              .call(this.responsivefy);\n\n      return svg\n    },\n\n    drawChart() {\n      let edges \n      if (this.curves) {\n        edges = this.svg.append(\"g\")\n          .selectAll(\".link\")\n          .data(this.links)\n          .join(\"path\")\n          .attr(\"opacity\", 0.3)\n          .attr(\"stroke\", this.linkStroke)\n          .attr(\"fill\", \"transparent\")\n          .attr('class', function(d) {\n            let source = d.source.split(' ').join('-');\n            let target = d.target.split(' ').join('-');\n            return 'link element ' + source + ' ' + target;\n            })\n          .attr('stroke-linecap', 'round')\n          .attr('stroke-width', function (d) {\n            return d.value*0.75;\n          });\n      } else {\n        edges = this.svg.append(\"g\")\n        .selectAll(\".link\")\n        .data(this.links)\n        .enter().append(\"line\")\n        .attr('class', function(d) {\n          let source = d.source.split(' ').join('-');\n          let target = d.target.split(' ').join('-');\n          return 'link element ' + source + ' ' + target;\n          })\n        .attr('opacity', 0.3)\n        .attr('stroke-linecap', 'round')\n        .attr('stroke', this.linkStroke)\n        .attr('stroke-width', function (d) {\n            return d.value*0.75;\n          });\n      }\n\n      let nodes = this.svg.append(\"g\")\n        .selectAll(\".node\")\n        .data(this.nodes)\n        .enter().append('circle')\n        .attr('id', (d) => d.index)\n        .attr('class', function(d) {\n          let nodeClass=''\n          return 'node element ' + d.id.split(' ').join('-');\n          })\n        .attr('fill', (d) => this.nodeColor[d['profile']])\n        .attr('r', (d) => d3.scaleLinear().domain([1, 45]).range([16, 40])(d.count))\n        .on('mouseover', (d, e, nodes) => this.nodeMouseover(d, e, nodes))\n        .on('mouseout', (d, e, nodes) => this.nodeMouseout(d, e, nodes));\n\n      let blackOut = this.blackOut\n\n      // Add single line text\n      this.svg.append(\"g\")\n        .selectAll(\".text\")\n        .data(this.nodes)\n        .enter()\n        .append('text')\n        .attr('class', function(d) {\n          let nodeClass=''\n          return 'node-text ' + d.id.split(' ').join('-');\n        })\n        .html(function (d) { \n          if (d.id.split(' ').length > 1) {\n            let elements = d.id.split(' ');\n            let string = '';\n            for (let i in elements) {\n              if (i == 0) {\n                string += '<tspan dy=\"-0.2em\">'+ elements[i] + '</tspan>'\n              } else {\n                if (elements.length ==2) {\n                  string += '<tspan dx=\"-2.5em\" dy=\"1em\">'+ elements[i] + '</tspan>'\n                } else {\n                  string += '<tspan dx=\"-2.2em\" dy=\"1em\">'+ elements[i] + '</tspan>'\n                }\n              }\n            }\n            return string;\n          } else {\n            return '<tspan dy=\"0.4em\">'+ d.id + '</tspan>'\n          }\n          })\n        .attr('fill', (d) => this.nodeColor[d['profile']])\n        .attr('dx', 0)\n        .attr('alignment-baseline', 'text-top')\n        .attr('text-anchor', 'middle')\n        .attr('fill', (d) => blackOut.indexOf(this.nodeColor[d.profile]) > -1 ? 'bg-gray-800' : 'white')\n        .style(\"font-weight\", 700)\n        .attr('font-size', (d) => d3.scaleLinear().domain([16, 60]).range([4, 10])(d.radius))\n        .on('mouseover', (d, e, nodes) => this.nodeMouseover(d, e, nodes))\n        .on('mouseout', (d, e, nodes) => this.nodeMouseout(d, e, nodes));\n\n      this.initDragTickZoom()\n    },\n\n    nodeMouseover(d, e, nodes) {\n      if (this.stepper === this.stepList.length-1) {\n        let targetNode = nodes[e]\n        this.activeNode = d.id\n        this.activeNodeColor = this.nodeColor[d.profile]\n        this.activeNodeProfile = d.profile\n        this.activeNodeSauces = d.count\n        this.activeNodeSidebar = d.text\n        this.activeNodeVariants = d.variants\n        let highlightLinks = true\n\n        if (this.pinned.length === 0) {\n            this.selection.nodes.push(nodes);\n            this.highlightNode(this.activeNode, highlightLinks, true, true);\n          }\n        this.$forceUpdate();\n      }\n    },\n\n    highlightNode(nodeName, highlightLinks, highlightOthers, decreaseOpacity){\n      let nodeClass = []\n      \n      if (Array.isArray(nodeName)) {\n        for (let i in nodeName){\n          nodeClass.push(nodeName[i].split(' ').join('-'))\n        }\n      } else {\n        nodeClass = nodeName.split(' ').join('-');\n      }\n\n      if (decreaseOpacity) {\n        // Decrease opacity for all irrelevant nodes and their text\n        d3.selectAll(\".node.element\").transition().duration(this.transitionSpeed).style(\"opacity\", 0.05);\n        d3.selectAll(\".node-text\").transition().duration(this.transitionSpeed).style(\"opacity\", 0.05);\n      }\n\n      // Highlight relevant nodes and their text\n      if (Array.isArray(nodeClass)) {\n        for (let i in nodeClass){\n          d3.selectAll(\".node.element.\"+nodeClass[i]).transition().duration(this.transitionSpeed).style(\"opacity\", 1);\n        d3.selectAll(\".node-text.\"+nodeClass[i]).transition().duration(this.transitionSpeed).style(\"opacity\", 1);\n        }\n      } else {\n        d3.selectAll(\".node.element.\"+nodeClass).transition().duration(this.transitionSpeed).style(\"opacity\", 1);\n        d3.selectAll(\".node-text.\"+nodeClass).transition().duration(this.transitionSpeed).style(\"opacity\", 1);\n      }\n\n      // Applicable only to mouse interactions, and NOT to stepper\n      if (highlightOthers) {\n        let otherNodes = this.identifyTargets(nodeName);\n        otherNodes.forEach(node => {\n          d3.selectAll(\".node.element.\"+ node).transition().duration(this.transitionSpeed).style(\"opacity\", 1);\n          d3.selectAll(\".node-text.\"+ node).transition().duration(this.transitionSpeed).style(\"opacity\", 1);\n        })\n      }\n      \n      if (decreaseOpacity) {\n        // Decrease opacity of irrelevant links\n        d3.selectAll(\".link.element\").transition().duration(this.transitionSpeed).style(\"opacity\", 0.01);\n      }\n\n      // Higlight links\n      if (highlightLinks) {\n        let source = nodeName.split(' ').join('-')\n        let sourceClass = \".link.element.\" + source\n        d3.selectAll(sourceClass).transition().duration(this.transitionSpeed).style(\"opacity\", 0.3);\n      }\n    },\n\n    identifyTargets(nodeName) {\n      let targetNodes = []\n      let count = 0\n      this.links.forEach(link => {\n        if (link.source.id === nodeName || link.target.id === nodeName){\n          count+=1;\n        }\n        if (link.source.id === nodeName) {\n          targetNodes.push(link.target.id.split(' ').join('-'));\n        } \n        \n        if (link.target.id === nodeName) {\n          targetNodes.push(link.source.id.split(' ').join('-'));\n        }\n      })\n      return targetNodes\n    },\n\n    nodeMouseout(d, e, nodes) {\n      if (this.stepper === this.stepList.length-1) {\n        // let targetNode = nodes[e]\n        // targetNode.classList.remove(\"selected\");\n        if (this.pinned.length === 0) {\n          this.noSelectedState(e);\n        }\n        this.$forceUpdate();\n      }\n    },\n\n    noSelectedState() {\n      d3.selectAll(\".node.element\").transition().duration(this.transitionSpeed).style(\"opacity\", 1);\n      d3.selectAll(\".link.element\").transition().duration(this.transitionSpeed).style(\"opacity\", 0.3);\n      d3.selectAll(\".node-text\").transition().duration(this.transitionSpeed).style(\"opacity\", 1);\n    },\n\n    responsivefy(svg) {\n      // get container + svg aspect ratio\n      var container = d3.select(svg.node().parentNode),\n          width = parseInt(svg.style(\"width\")),\n          height = parseInt(svg.style(\"height\")),\n          aspect = width / height;\n\n      // add viewBox and preserveAspectRatio properties,\n      // and call resize so that svg resizes on inital page load\n      svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n          //.attr(\"perserveAspectRatio\", \"xMinYMid\")\n          .call(resize);\n\n      // to register multiple listeners for same event type, \n      // you need to add namespace, i.e., 'click.foo'\n      // necessary if you call invoke this function for multiple svgs\n      // api docs: https://github.com/mbostock/d3/wiki/Selections#on\n      d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n      // get width of container and resize svg to fit it\n      function resize() {\n          var targetWidth = parseInt(container.style(\"width\")) > 700 ? 700 : parseInt(container.style(\"width\"));\n          var targetHeight = Math.round(targetWidth / aspect);\n          svg.attr(\"width\", targetWidth);\n          svg.attr(\"height\", targetHeight);\n      }\n    },\n\n    initData() {\n      this.force = d3\n        .forceSimulation(this.nodes)\n        .force(\n          \"link\",\n          d3.forceLink(this.links)\n            .id(d => d.id)\n            .distance(this.linkDistance)\n        )\n        .force(\"charge\", d3.forceManyBody().strength(this.bodyStrength)) //The strength of the attraction or repulsion\n        .force('collision', d3.forceCollide().radius(function(d) {\n          return d3.scaleLinear().domain([1, 45]).range([20, 40])(d.count)+0.25\n        }))\n        .force(\n          \"center\", \n          d3.forceCenter(this.width/2, this.height/2)\n        )\n        .on(\"tick\", this.ticked);\n    },\n\n    ticked() {\n      d3.selectAll(\".circ\")\n          .attr(\"cx\", (d) => d.x)\n          .attr(\"cy\", (d) => d.y);\n    },\n\n    initDragTickZoom() {\n      d3.selectAll(\".node\").call(this.drag(this.force));\n      this.force.on(\"tick\", () => {\n        if (this.curves) {\n          d3.selectAll(\".link\")\n          .data(this.links)\n          .attr('d', function (d) {\n            let dx = d.target.x - d.source.x;\n            let dy = d.target.y - d.source.y;\n            let dr = Math.sqrt(dx * dx + dy * dy);\n            return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 1 0,1 \" + d.target.x + \",\" + d.target.y;\n          });\n        } else {\n          d3.selectAll(\".link\")\n          .data(this.links)\n          .attr(\"x1\", d => d.source.x)\n          .attr(\"y1\", d => d.source.y)\n          .attr(\"x2\", d => d.target.x)\n          .attr(\"y2\", d => d.target.y);\n        }\n        \n        d3.selectAll(\".node\")\n          .data(this.nodes)\n          .attr(\"cx\", d => d.x)\n          .attr(\"cy\", d => d.y);\n\n        d3.selectAll(\".node-text\")\n          .data(this.nodes)\n          .attr(\"x\", d => d.x)\n          .attr(\"y\", d => d.y);\n      });\n    },\n\n    drag(simulation) {\n      function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.2).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragended(d) {\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n\n      return d3\n        .drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended);\n    },\n  }\n};\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans&display=swap');\n</style>\n\n<style scoped>\n.app {\n  display: inline-block;\n  position: relative;\n}\n\n.element {\n  transition: opacity 0.2s ease;\n}\n.selected {\n  opacity: 0.9 !important;\n}\n\n.node,\n.link {\n  cursor: pointer;\n}\n\n.btn-orange {\n  @apply transition duration-200 font-bold p-4 m-0 rounded inline-flex items-center \n        flex-grow-0 h-12 text-xl;\n  background-color: #FCB040;\n}\n\n.btn-orange:hover {\n  @apply text-white bg-red-700;\n}\n\n.header {\n  @apply text-center justify-between;\n}\n\n/* responsive, form small screens, use 13px font size */\n.sidebar-text {\n  @apply w-5/6 flex-auto rounded-md p-3 grid grid-cols-1 bg-orange-100;\n}\n\n.top-header, .font-tag, .sauces, .sub-header {\n  font-family: 'Gordita', 'IBM Plex Sans';\n}\n\n.btn {\n  @apply p-5;\n  border-radius: 50%;\n}\n\n.dot1 {\n  @apply mx-2;\n  height: 6px;\n  width: 6px;\n  background-color:#E4140F;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.dot2 {\n  height: 12px;\n  width: 12px;\n  background-color: #E4140F;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.rectangle1 {\n  height: 4px;\n  width: 30px;\n  opacity: 0.5;\n  display: inline-block;\n}\n\n.rectangle2 {\n  @apply mt-1;\n  height: 8px;\n  width: 30px;\n  opacity: 0.5;\n  display: inline-block;\n}\n\n@media only screen and (max-width: 600px) {\n  body {\n    background-color: lightblue;\n  }\n}\n</style>\n\n"]}]}